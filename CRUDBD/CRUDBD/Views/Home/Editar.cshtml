

@using CRUDBD.Models;

@model Cliente

@{
    ViewBag.Title = "Editar";
}




<div class="jumbotron">
    <h2>Editar</h2>
</div>

@using (Html.BeginForm("Editar", "Home", FormMethod.Post))
{

    <div class="row">

        <div class="col-lg-2">
            @Html.LabelFor(Cliente => Cliente.cpf)

            @Html.TextBoxFor(Cliente => Cliente.cpf, new { @class = "form-control" })
            <button type="submit" class="btn btn-primary">Consultar</button>
        </div>

    </div>
}



@using (Html.BeginForm("Atualizar", "Home", FormMethod.Post))
{

    



if (Model!=null)
{


    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.maskedinput.js" type="text/javascript"></script>  
        @Html.ValidationSummary(true)
        <div class="row">

            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.cpf)

                @Html.TextBoxFor(Cliente => Cliente.cpf, new { @class = "form-control", })
                @Html.ValidationMessageFor(Cliente => Cliente.cpf)


            </div>


            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.Nome)

                @Html.TextBoxFor(Cliente => Cliente.Nome, new { @class = "form-control", value = Model.Nome })
                @Html.ValidationMessageFor(Cliente => Cliente.Nome)

            </div>
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.estadocivil)


                @{
                    List<SelectListItem> Estadocivil = new List<SelectListItem>();
                    Estadocivil.Add(new SelectListItem
                    {
                        Text = "Casado",
                        Value = "Casado"
                    });
                    Estadocivil.Add(new SelectListItem
                    {
                        Text = "Solteiro",
                        Value = "Solteiro",
                        Selected = true
                    });
                    Estadocivil.Add(new SelectListItem
                    {
                        Text = "Divorciado",
                        Value = "Divorciado",
                        Selected = true
                    });
                    @Html.DropDownListFor(Cliente => Cliente.estadocivil, Estadocivil, "Estado Civil", new { @class = "form-control"  ,value = Model.estadocivil })
                }


            </div>
            <div class="col-sm-1">
                @Html.LabelFor(Cliente => Cliente.sexo)



                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "M",
                        Value = "M"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "F",
                        Value = "F",
                        Selected = true
                    });

                }

                @Html.DropDownListFor(Cliente => Cliente.sexo, listItems, "", new { @class = "form-control", value = Model.sexo })
                @Html.ValidationMessageFor(Cliente => Cliente.sexo)










            </div>

        </div>
        <br />
        <div class="row">
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.datadenasicmento)

                @Html.TextBoxFor(Cliente => Cliente.datadenasicmento, new { @class = "form-control", id = "nascimento", @type = "date", value = Model.datadenasicmento })
                @Html.ValidationMessageFor(Cliente => Cliente.datadenasicmento)
            </div>
            <div class="col-lg-3">
                @Html.LabelFor(Cliente => Cliente.tipodedocumento)





                @{
                    List<SelectListItem> tipodedocumento = new List<SelectListItem>();
                    tipodedocumento.Add(new SelectListItem
                    {
                        Text = "Carteira Nacional de Habilitação",
                        Value = "Carteira Nacional de Habilitação"
                    });
                    tipodedocumento.Add(new SelectListItem
                    {
                        Text = "Carteira de trabalho",
                        Value = "Carteira de trabalho",
                        Selected = true
                    });
                    tipodedocumento.Add(new SelectListItem
                    {
                        Text = "Passaporte brasileiro",
                        Value = "Passaporte brasileiro",
                        Selected = true
                    });
                    tipodedocumento.Add(new SelectListItem
                    {
                        Text = "Cédula de identidade",
                        Value = "Cédula de identidade",
                        Selected = true
                    });
                    tipodedocumento.Add(new SelectListItem
                    {
                        Text = "Título eleitoral",
                        Value = "PTítulo eleitoral",
                        Selected = true
                    });
                }
                @Html.DropDownListFor(Cliente => Cliente.tipodedocumento, tipodedocumento, "Tipo de documento", new { @class = "form-control", value = Model.tipodedocumento })

            </div>
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.numerodocumento)

                @Html.TextBoxFor(Cliente => Cliente.numerodocumento, new { @class = "form-control", value = Model.numerodocumento })

            </div>
            <div class="col-sm-2">
                @Html.LabelFor(Cliente => Cliente.orgaemissor)

                @Html.TextBoxFor(Cliente => Cliente.orgaemissor, new { @class = "form-control", value = Model.orgaemissor })

            </div>
        </div>
        <br />
        <div class="row">

            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.telefone)

                @Html.TextBoxFor(Cliente => Cliente.telefone, new { @class = "form-control", value = Model.telefone })

            </div>
            <div class="col-sm-1">
                @Html.LabelFor(Cliente => Cliente.numero)

                @Html.TextBoxFor(Cliente => Cliente.numero, new { @class = "form-control", value = Model.numero })

            </div>

        </div>
        <br />

        <div class="row">
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.endereco.cep)

                @Html.TextBoxFor(Cliente => Cliente.endereco.cep, new { @class = "form-control", value = Model.endereco.cep })

            </div>
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.endereco.cidade)

                @Html.TextBoxFor(Cliente => Cliente.endereco.cidade, new { @class = "form-control", value = Model.endereco.cidade })

            </div>
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.endereco.uf)

                @Html.TextBoxFor(Cliente => Cliente.endereco.uf, new { @class = "form-control", value = Model.endereco.uf })

            </div>
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.endereco.logradouro)

                @Html.TextBoxFor(Cliente => Cliente.endereco.logradouro, new { @class = "form-control", value = Model.endereco.logradouro })

            </div>
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.endereco.bairro)

                @Html.TextBoxFor(Cliente => Cliente.endereco.bairro, new { @class = "form-control", value = Model.endereco.bairro })

            </div>
            <div class="col-lg-2">
                @Html.LabelFor(Cliente => Cliente.endereco.pais)



                @{
                    List<SelectListItem> paises = new List<SelectListItem>();
                    paises.Add(new SelectListItem
                    {
                        Text = "Brasil",
                        Value = "Brasil"
                    });
                    paises.Add(new SelectListItem
                    {
                        Text = "Mexico",
                        Value = "Mexico",
                        Selected = true
                    });
                    paises.Add(new SelectListItem
                    {
                        Text = "Canada",
                        Value = "Canada",
                        Selected = true
                    });
                    paises.Add(new SelectListItem
                    {
                        Text = "Inglaterra",
                        Value = "Inglaterra",
                        Selected = true
                    });

                }

                @Html.DropDownListFor(Cliente => Cliente.endereco.pais, paises, "País", new { @class = "form-control", value = Model.endereco.pais })
                @Html.ValidationMessageFor(Cliente => Cliente.endereco.pais)


            </div>


        </div>
        <br />
        <br />
        <div class="row">

            <div class="col-lg-2">
                <button type="submit" class="btn btn-primary">Atualizar</button>


            </div>



        </div>
        <br />


                        }
                    }



